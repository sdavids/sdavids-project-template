# shellcheck shell=sh

# SPDX-FileCopyrightText: Â© 2025 Sebastian Davids <sdavids@gmx.de>
# SPDX-License-Identifier: Apache-2.0

# hadolint needs to be in $PATH
# https://github.com/hadolint/hadolint
#   Mac:
#     brew install hadolint
#   Linux:
#     sudo apt-get install hadolint

# _shellcheck needs to be in $PATH
# https://www.shellcheck.net
#   Mac:
#     brew install shellcheck
#   Linux:
#     sudo apt-get install shellcheck

# shfmt needs to be in $PATH
# https://github.com/mvdan/sh
#   Mac:
#     brew install shfmt
#   Linux:
#     sudo apt-get install shfmt

# yamllint needs to be in $PATH
# https://yamllint.readthedocs.io/en/stable/
#   Mac:
#     brew install yamllint
#   Linux:
#     sudo apt-get install yamllint

# pkill needs to be in $PATH
#   Linux:
#     sudo apt-get install procps

set -eu

if [ -n "$(git status --porcelain=v1)" ]; then
  echo 'Git workspace is not clean: commit, stash, or reset your changes' >&2
  exit 1
fi

git_root="$(git rev-parse --show-toplevel)"
cd "${git_root}" || exit 1
unset git_root

if command -v shfmt >/dev/null 2>&1; then
  set +e

  diff="$(find .husky -type f -maxdepth 1 -print0 | xargs -0 shfmt --diff --indent 2 --case-indent --binary-next-line --simplify)"
  if [ -n "${diff}" ]; then
    printf '%s\n' "${diff}" >&2
    exit 1
  fi
  diff="$(find . -type f -name '*.sh' -not -path '*/node_modules/*' -not -path '*/.husky/_/*' -print0 | xargs -0 shfmt --diff --indent 2 --case-indent --binary-next-line --simplify)"
  if [ -n "${diff}" ]; then
    printf '%s\n' "${diff}" >&2
    exit 1
  fi
  unset diff

  set -e
fi

if command -v shellcheck >/dev/null 2>&1; then
  { find .husky -type f -maxdepth 1 -print0 | xargs -0 shellcheck; } >&2
  { find . -type f -name '*.sh' -not -path '*/node_modules/*' -not -path '*/.husky/_/*' -print0 | xargs -0 shellcheck; } >&2
fi

if command -v yamllint >/dev/null 2>&1; then
  # https://yamllint.readthedocs.io/en/stable/quickstart.html#running-yamllint
  yamllint --strict . >&2
fi

if command -v hadolint >/dev/null 2>&1; then
  # https://github.com/hadolint/hadolint#cli
  hadolint --no-color .devcontainer/Dockerfile >&2
fi

node --run format:check >&2

node --run lint >&2

node --run check:types:node >&2
node --run check:types:vitest >&2
node --run check:types:playwright >&2

node --run test >&2

GIT_PUSH_HOOK=true node --run build >&2

GIT_PUSH_HOOK=true node --run playwright >&2

exit_cleanup() {
  err=$?
  trap '' EXIT INT QUIT TERM
  pkill -P $PREVIEW_PID
  unset PREVIEW_PID
  exit $err
}

sig_cleanup() {
  err=$?
  trap '' EXIT
  set +e
  (exit $err)
  exit_cleanup
}

# https://unix.stackexchange.com/questions/57940/trap-int-term-exit-really-necessary/
trap exit_cleanup EXIT
trap sig_cleanup INT QUIT TERM

GIT_PUSH_HOOK=true node --run preview >&2 &
export PREVIEW_PID=$!

GIT_PUSH_HOOK=true node --run lhci:githook >&2

GIT_PUSH_HOOK=true node --run lychee >&2
